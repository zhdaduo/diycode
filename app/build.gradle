apply plugin: 'com.android.application'

//def gitCommits = Integer.parseInt('git rev-list --count HEAD'.execute([], project.rootDir).text.trim())

//def gitTag = 'git tag'.execute([], project.rootDir).text.trim().split("\n").last()

def androidCof = rootProject.ext.android;

android {
    compileSdkVersion androidCof.compileSdkVersion
    buildToolsVersion androidCof.buildToolsVersion

    //.jpg -> .png
    aaptOptions {
        cruncherEnabled = false;
        useNewCruncher = false;
    }

    defaultConfig {
        applicationId androidCof.applicationId
        minSdkVersion androidCof.minSdkVersion
        targetSdkVersion androidCof.targetSdkVersion
        versionCode androidCof.versionCode
        versionName androidCof.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [PGYER_APPID: "${PGYER_APPID_VALUE}"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    lintOptions {
        abortOnError false
    }

    signingConfigs {
        release {
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
            storeFile file(STORE_FILE)
            storePassword STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            shrinkResources false
            zipAlignEnabled true
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            output.outputFile = new File(
                    output.outputFile.parent,
                    "diycode-${variant.buildType.name}-${variant.versionName}.apk".toLowerCase())
        }
    }
}


dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile rootProject.ext.dependencies["appcompat-v7"]
    compile rootProject.ext.dependencies["support-v4"]
    compile rootProject.ext.dependencies["design"]
    compile rootProject.ext.dependencies["recyclerview-v7"]
    compile rootProject.ext.dependencies["dagger"]
    annotationProcessor rootProject.ext.dependencies["dagger-compiler"]
    compile rootProject.ext.dependencies["retrofit"]
    compile rootProject.ext.dependencies["converter-gson"]
    compile rootProject.ext.dependencies["adapter-rxjava"]
    compile rootProject.ext.dependencies["okhttp"]
    compile rootProject.ext.dependencies["butterknife"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    compile rootProject.ext.dependencies["glide"]
    compile rootProject.ext.dependencies["glide-transformations"]
    compile rootProject.ext.dependencies["bga-swipebacklayout"]
    compile rootProject.ext.dependencies["Android-SpinKit"]
    compile rootProject.ext.dependencies["multitype"], {
        exclude group: 'com.android.support'
    }
    compile rootProject.ext.dependencies["eventbus"]
    compile rootProject.ext.dependencies["jsoup"]
    compile rootProject.ext.dependencies["PhotoView"]
    compile rootProject.ext.dependencies["statusbaruitl"]
    compile rootProject.ext.dependencies["pgyersdk"]
    compile rootProject.ext.dependencies["permissionsdispatcher"], {
        exclude module: "support-v13"
    }
    annotationProcessor rootProject.ext.dependencies["permissionsdispatcher-processor"]
    testCompile rootProject.ext.dependencies["junit"]
    compile rootProject.ext.dependencies["support-v13"]
    compile rootProject.ext.dependencies["rxjava"]
    compile rootProject.ext.dependencies["rxandroid"]
}
